# setWohnzimmerThermostatWhenLeaving:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_livingroom_thermostat_when_leaving
#   trigger_entity: input_boolean.is_home
#   trigger_state: "off"
#   climate_entity: climate.wohnzimmer_thermostat
#   target_entity: input_number.set_livingroom_thermostat_when_leaving
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   dependencies: 
#     - Notifier

# setBadObenThermostatWhenLeaving:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_upper_bath_thermostat_when_leaving
#   trigger_entity: input_boolean.is_home
#   trigger_state: "off"
#   climate_entity: climate.bad_oben_thermostat
#   target_entity: input_number.set_upper_bath_thermostat_when_leaving
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   dependencies:
#     - Notifier

# setBadThermostatWhenLeaving:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_bath_thermostat_when_leaving
#   trigger_entity: input_boolean.is_home
#   trigger_state: "off"
#   climate_entity: climate.bad_thermostat
#   target_entity: input_number.set_bath_thermostat_when_leaving
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   dependencies:
#     - Notifier

# setKitchenThermostatWhenLeaving:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_kitchen_thermostat_when_leaving
#   trigger_entity: input_boolean.is_home
#   trigger_state: "off"
#   climate_entity: climate.kuche_thermostat
#   target_entity: input_number.set_kitchen_thermostat_when_leaving
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   dependencies:
#     - Notifier

# setWohnzimmerThermostatWhenSleeping:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_livingroom_thermostat_when_sleeping
#   trigger_entity: input_boolean.sleepmode
#   trigger_state: "on"
#   climate_entity: climate.wohnzimmer_thermostat
#   target_entity: input_number.set_livingroom_thermostat_when_sleeping
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   dependencies:
#     - Notifier

# setBadObenThermostatWhenSleeping:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_upper_bath_thermostat_when_sleeping
#   trigger_entity: input_boolean.sleepmode
#   trigger_state: "on"
#   climate_entity: climate.bad_oben_thermostat
#   target_entity: input_number.set_upper_bath_thermostat_when_sleeping
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   dependencies:
#     - Notifier

# setBadThermostatWhenSleeping:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_bath_thermostat_when_sleeping
#   trigger_entity: input_boolean.sleepmode
#   trigger_state: "on"
#   climate_entity: climate.bad_thermostat
#   target_entity: input_number.set_bath_thermostat_when_sleeping
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   dependencies:
#     - Notifier

# setKitchenThermostatWhenSleeping:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_kitchen_thermostat_when_sleeping
#   trigger_entity: input_boolean.sleepmode
#   trigger_state: "on"
#   climate_entity: climate.kuche_thermostat
#   target_entity: input_number.set_kitchen_thermostat_when_sleeping
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   dependencies:
#     - Notifier

# setLivingroomThermostatWhenWakingUp:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_livingroom_thermostat_when_waking_up
#   trigger_entity: input_boolean.sleepmode
#   trigger_state: "off"
#   climate_entity: climate.wohnzimmer_thermostat
#   target_entity: input_number.set_livingroom_thermostat_when_waking_up
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   notify_name: group_notifications
#   use_alexa: False
#   dependencies:
#     - Notifier

# setKitchenThermostatWhenWakingUp:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_kitchen_thermostat_when_waking_up
#   trigger_entity: input_boolean.sleepmode
#   trigger_state: "off"
#   climate_entity: climate.kuche_thermostat
#   target_entity: input_number.set_kitchen_thermostat_when_waking_up
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   notify_name: group_notifications
#   use_alexa: False
#   dependencies:
#     - Notifier

# setBadThermostatWhenWakingUp:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_bath_thermostat_when_waking_up
#   trigger_entity: input_boolean.sleepmode
#   trigger_state: "off"
#   climate_entity: climate.bad_thermostat
#   target_entity: input_number.set_bath_thermostat_when_waking_up
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   notify_name: group_notifications
#   use_alexa: False
#   dependencies:
#     - Notifier

# setBadObenThermostatWhenWakingUp:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_upper_bath_thermostat_when_waking_up
#   trigger_entity: input_boolean.sleepmode
#   trigger_state: "off"
#   climate_entity: climate.bad_oben_thermostat
#   target_entity: input_number.set_upper_bath_thermostat_when_waking_up
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   notify_name: group_notifications
#   use_alexa: False
#   dependencies:
#     - Notifier

# setLivingroomThermostatWhenComingHome:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_livingroom_thermostat_when_coming_home
#   trigger_entity: input_boolean.is_home
#   trigger_state: "on"
#   climate_entity: climate.wohnzimmer_thermostat
#   target_entity: input_number.set_livingroom_thermostat_when_coming_home
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   notify_name: group_notifications
#   use_alexa: False
#   dependencies:
#     - Notifier

# setKitchenThermostatWhenComingHome:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_kitchen_thermostat_when_coming_home
#   trigger_entity: input_boolean.is_home
#   trigger_state: "on"
#   climate_entity: climate.kuche_thermostat
#   target_entity: input_number.set_kitchen_thermostat_when_coming_home
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   notify_name: group_notifications
#   use_alexa: False
#   dependencies:
#     - Notifier

# setBadThermostatWhenComingHome:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_bath_thermostat_when_coming_home
#   trigger_entity: input_boolean.is_home
#   trigger_state: "on"
#   climate_entity: climate.bad_thermostat
#   target_entity: input_number.set_bath_thermostat_when_coming_home
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   notify_name: group_notifications
#   use_alexa: False
#   dependencies:
#     - Notifier

# setBadObenThermostatWhenComingHome:
#   module: setThermostatOnStateChange
#   class: SetThermostatOnStateChange
#   app_switch: input_boolean.set_upper_bath_thermostat_when_coming_home
#   trigger_entity: input_boolean.is_home
#   trigger_state: "on"
#   climate_entity: climate.bad_oben_thermostat
#   target_entity: input_number.set_upper_bath_thermostat_when_coming_home
#   message: "Ich habe {} auf {} °C gestellt"
#   #message: "I have set {} to {}"
#   notify_name: group_notifications
#   use_alexa: False
#   dependencies:
#     - Notifier